plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
	id 'org.owasp.dependencycheck' version '10.0.4'
}

group = 'com.austinharlan'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	// implementation 'org.springframework.boot:spring-boot-starter-webflux'
	// implementation 'org.springframework.boot:spring-boot-starter-graphql'
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	// implementation 'org.springframework.boot:spring-boot-starter-flyway'
	// implementation 'org.flywaydb:flyway-database-postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	// testImplementation 'io.projectreactor:reactor-test'
	// testImplementation 'org.springframework.graphql:spring-graphql-test'
	// testImplementation 'org.springframework.security:spring-security-test'
	// testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
	// testImplementation 'org.testcontainers:postgresql:1.19.7'
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events "FAILED", "SKIPPED"
        exceptionFormat "full"
        showStandardStreams = false
    }
}

tasks.withType(Test).configureEach { 
	useJUnitPlatform() 
	}

spotless { 
	java { googleJavaFormat() } 
	}
