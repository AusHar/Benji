plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.25.0'
	id 'org.owasp.dependencycheck' version '12.1.7'
	id 'org.openapi.generator' version '7.7.0'
}

group = 'com.austinharlan'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.boot:spring-boot-starter-cache'
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.flywaydb:flyway-core'
        runtimeOnly 'org.postgresql:postgresql'
        runtimeOnly 'com.h2database:h2'
        implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
        implementation 'io.swagger.core.v3:swagger-annotations:2.2.22'
        implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
        // implementation 'org.springframework.boot:spring-boot-starter-graphql'
        // implementation 'org.flywaydb:flyway-database-postgresql'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.testcontainers:junit-jupiter'
        testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	// testImplementation 'io.projectreactor:reactor-test'
	// testImplementation 'org.springframework.graphql:spring-graphql-test'
        // testImplementation 'org.springframework.security:spring-security-test'
	// testImplementation 'org.testcontainers:junit-jupiter:1.19.7'
	// testImplementation 'org.testcontainers:postgresql:1.19.7'
}

tasks.test {
    useJUnitPlatform()
    testLogging {
        events "FAILED", "SKIPPED"
        exceptionFormat = "full"
        showStandardStreams = false
    }
}

tasks.withType(Test).configureEach { 
	useJUnitPlatform() 
	}

spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
        targetExclude "$buildDir/**/*.java"
    }
}

tasks.named('spotlessJava').configure {
    dependsOn tasks.named('openApiGenerate')
}

// Ensure Spotless runs after OpenAPI generation to avoid implicit dependency errors
tasks.named('spotlessJava') { dependsOn tasks.named('openApiGenerate') }
tasks.named('spotlessApply') { dependsOn tasks.named('openApiGenerate') }
tasks.named('spotlessCheck') { dependsOn tasks.named('openApiGenerate') }

// ── OpenAPI code generation (DTOs & API interfaces) ──────────────────────────
openApiGenerate {
    generatorName = 'spring'
	inputSpec 	  = "${projectDir}/openAPI.yaml"
    outputDir     = "${buildDir}/generated/openapi"

    // Use your package namespace; avoid hyphens in package names
    apiPackage     = "com.austinharlan.tradingdashboard.api"
    modelPackage   = "com.austinharlan.tradingdashboard.dto"
    invokerPackage = "com.austinharlan.tradingdashboard.invoker"

    additionalProperties = [
        interfaceOnly           : 'true',
        useSpringBoot3          : 'true',
        dateLibrary             : 'java8',
        hideGenerationTimestamp : 'true',
        useTags                 : 'true'
    ]
}

// Include generated sources in main compilation
sourceSets {
    main {
        java {
            srcDir "${buildDir}/generated/openapi/src/main/java"
        }
    }
}

// Ensure code is generated before compiling
tasks.named('compileJava') {
    dependsOn tasks.named('openApiGenerate')
}
